
user  nginx;

env REDIS_HOST;
env REDIS_PORT;
env REDIS_PASSWORD;
env OIDC_ISSUER;
env OIDC_CLIENT_ID;
env OIDC_CLIENT_SECRET;
env OIDC_SESSION_SECRET;
env OIDC_LOGOUT_REDIRECT;

# Tự động theo số CPU
worker_processes auto;

# Regex JIT (tăng tốc match)
pcre_jit on;

# Log lỗi mặc định
error_log /var/log/nginx/error.log warn;

events {
    # Số connection tối đa cho 1 worker
    worker_connections 4096;
    multi_accept on;   # nhận nhiều kết nối 1 lúc
}

http {
    ##
    # MIME types + default
    ##
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    ##
    # Bảo mật & tối ưu
    ##
    server_tokens off;
    client_max_body_size 10m;   # tăng giới hạn request nếu API có upload
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    ##
    # SSL/TLS
    ##
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;

    ##
    # Gzip
    ##
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # WebSocket support
    ##
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    ##
    # Logging
    ##
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # log access ra stdout
    access_log /dev/stdout main;

    # log error ra stderr
    error_log /dev/stderr warn;

    ##
    # OpenResty lua settings
    ##
    lua_package_path  "/usr/lib/nginx/lualib/resty/?.lua;;";
    lua_package_cpath "/usr/lib/nginx/lualib/?.so;;";
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth 5;

    # Dùng shared dict cho lua-resty-openidc (Auth0, JWT, cache,…)
    lua_shared_dict discovery 1m;
    lua_shared_dict jwks      1m;
    lua_shared_dict sessions  10m;
    lua_shared_dict resty_jwt_verification_cache_jwks 30m;

    # Khởi tạo JWKS module khi Nginx start
    init_by_lua_block {
        local jwks = require("resty.jwt-verification-jwks")
        local cache = require("resty.jwt-verification-jwks-cache-local")

        local ok, err = jwks.init(cache)
        if not ok then
            error("Error initializing jwks module: " .. err)
        end
    }

    ##
    # Bao gồm server block
    ##
    include /etc/nginx/http.d/*.conf;
}
