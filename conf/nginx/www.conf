# Cache config
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=WORDPRESS:100m inactive=60m use_temp_path=off;
proxy_cache_key "$scheme$request_method$host$request_uri";

map $http_cookie $skip_cache {
    default                     0;
    ~*wordpress_logged_in       1;
    ~*wp-postpass               1;
    ~*wp-resetpass              1;
}
map $request_method $cache_bypass {
    GET     0;
    HEAD    0;
    default 1;
}
map $uri $jwt_required {
    ~^/api/config/   0;
    default          1;
}

server {
    server_name %%HTTP_SERVER%%;
    listen 8080;

    resolver 1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    root /var/www/html;
    index index.php index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Disallow methods except GET|POST|HEAD
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 405;
    }

    # General PHP / WooCommerce
    location ~ \.php$ {
        proxy_pass http://%%WOOCOMMERCE_SERVER%%;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_cache WORDPRESS;
        proxy_cache_bypass $skip_cache $cache_bypass;
        proxy_no_cache $skip_cache $cache_bypass;
        proxy_cache_valid 200 301 302 60m;
        proxy_cache_use_stale error timeout invalid_header updating;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Static assets
    location ~* \.(?:jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot|otf|zip|pdf|docx?)$ {
        proxy_pass http://%%WOOCOMMERCE_SERVER%%;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_cache WORDPRESS;
        proxy_cache_valid 200 30d;
        proxy_cache_bypass $skip_cache $cache_bypass;
        proxy_no_cache $skip_cache $cache_bypass;

        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=2592000, immutable";
        add_header X-Cache-Status $upstream_cache_status;
    }

    # WordPress admin/login/api → skip cache
    location ~* /(wp-admin|wp-login\.php|wp-json/|xmlrpc\.php) {
        proxy_pass http://%%WOOCOMMERCE_SERVER%%;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass 1;
        proxy_no_cache 1;
    }

    # Healthcheck
    location /health {
        proxy_pass http://127.0.0.1:%%SERVER_PORT%%/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # Internal APIs (Rust server)
    location /api/ {
	access_by_lua_block {
            -- Cài đặt thư viện: https://opm.openresty.org/package/anvouk/lua-resty-jwt-verification
            local jwks = require("resty.jwt-verification-jwks")
            local cjson = require("cjson")

            -- Thay thế bằng domain Auth0 của bạn
            local issuer = os.getenv("OIDC_ISSUER") .. "/.well-known/jwks.json"

            -- Nếu là api public, bỏ qua k check jwt
	    if ngx.var.jwt_required == "0" then
               return  -- bỏ qua JWT check
            end

            -- Lấy token
            local auth_header = ngx.req.get_headers()["authorization"]
            if not auth_header then
	        ngx.header["Content-Type"] = "application/json"
                ngx.status = ngx.HTTP_UNAUTHORIZED
                return ngx.say(cjson.encode({
                    error = "Missing Authorization header for request from ", ngx.var.remote_addr
                }))
            end
            local jwt_token = auth_header:gsub("Bearer%s+", "")

            -- Xác minh với JWKS
            local jwt_obj, err = jwks.verify_jwt_with_jwks(jwt_token, issuer)
            if not jwt_obj then
	        ngx.header["Content-Type"] = "application/json"
                ngx.status = ngx.HTTP_UNAUTHORIZED
                return ngx.say(cjson.encode({
                    error = "JWT verification failed: " .. err
                }))
            end

            -- Gán thông tin user vào header để backend sử dụng
            ngx.req.set_header("X-User-Id", jwt_obj.payload.sub)
            if jwt_obj.payload.email then
                ngx.req.set_header("X-User-Email", jwt_obj.payload.email)
            end
        }

        proxy_pass http://127.0.0.1:%%SERVER_PORT%%;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Misc
    location = /favicon.ico {
	access_log off;
	log_not_found off;
    }
    location = /robots.txt  {
	proxy_pass http://127.0.0.1:%%SERVER_PORT%%/api/config/v1/seo/robots;
    	proxy_set_header Host $host;
    	proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	allow all;
	access_log off;
	log_not_found off;
    }
    location = /sitemap.xml {
        proxy_pass http://127.0.0.1:%%SERVER_PORT%%/api/config/v1/seo/sitemap;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	allow all;
        access_log off;
        log_not_found off;
    }
    location ~ /\.ht        { deny all; }
}
