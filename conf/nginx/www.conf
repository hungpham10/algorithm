# Cache config
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=WEBSITE:100m inactive=60m use_temp_path=off;
proxy_cache_key "$scheme$request_method$host$request_uri";

map $http_cookie $skip_cache {
    default                     0;
    ~*wordpress_logged_in       1;
    ~*wp-postpass               1;
    ~*wp-resetpass              1;
}
map $request_method $cache_bypass {
    GET     0;
    HEAD    0;
    default 1;
}
map $uri $jwt_required {
    ~^/api/config/                   0;
    ~^/api/ecommerce/v1/wms/shelves  1;
    default                          2;
}

map $http_user_agent $user_type {
    default "organic";
    ~*googlebot|bingbot|yahoo|baiduspider|yandexbot|duckduckbot|slurp|ahrefsbot|mj12bot "bot";
    ~*curl|wget|python-requests|postman|insomnia "tool";
    "" "unknown";
}

map $http_user_agent $device_type {
    default "desktop";
    ~*mobile|android|iphone|ipad|ipod|opera\ mini|webos|blackberry|windows\ phone "mobile";
}

server {
    server_name %%HTTP_SERVER%%;
    listen 8080;

    resolver 1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    root /var/www/html;
    index index.html index.php;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Disallow methods except GET|POST|HEAD
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 405;
    }

    # General PHP / WooCommerce
    location ~ \.php$ {
        proxy_pass http://%%WOOCOMMERCE_SERVER%%;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_cache WEBSITE;
        proxy_cache_bypass $skip_cache $cache_bypass;
        proxy_no_cache $skip_cache $cache_bypass;
        proxy_cache_valid 200 301 302 60m;
        proxy_cache_use_stale error timeout invalid_header updating;
        add_header X-Cache-Status $upstream_cache_status;
    }

    # WordPress admin/login/api → skip cache
    location ~* /(wp-admin|wp-login\.php|wp-json/|xmlrpc\.php) {
        proxy_pass http://%%WOOCOMMERCE_SERVER%%;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass 1;
        proxy_no_cache 1;
    }

    # Healthcheck
    location /health {
        proxy_pass http://127.0.0.1:%%SERVER_PORT%%/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # Internal APIs (Rust server)
    location /api/ {
	    access_by_lua_block {
            local jwks = require("resty.jwt-verification-jwks")
            local cjson = require("cjson")

            local issuer = os.getenv("OIDC_ISSUER") .. "/.well-known/jwks.json"

	        if ngx.var.jwt_required == "0" then
                return
            end

            local auth_header = ngx.req.get_headers()["authorization"]
            if not auth_header then
	    	    if ngx.var.jwt_required == "2" then
	                ngx.header["Content-Type"] = "application/json"
                        ngx.status = ngx.HTTP_UNAUTHORIZED
                        return ngx.say(cjson.encode({
                            error = "Missing Authorization header for request from " .. ngx.var.remote_addr
                        }))
                end
            end

            if not auth_header then
                -- @TODO: đánh giá xem với một guest thì cần track gì
                ngx.req.set_header("X-Is-Guest", "true")
            else
                local jwt_token = auth_header:gsub("Bearer%s+", "")

                local jwt_obj, err = jwks.verify_jwt_with_jwks(jwt_token, issuer)
                if not jwt_obj then
	            ngx.header["Content-Type"] = "application/json"
                    ngx.status = ngx.HTTP_UNAUTHORIZED
                    return ngx.say(cjson.encode({
                        error = "JWT verification failed: " .. err
                    }))
                end

                ngx.req.set_header("X-User-Id", jwt_obj.payload.sub)
                if jwt_obj.payload.email then
                    ngx.req.set_header("X-User-Email", jwt_obj.payload.email)
                end
            end
        }

        proxy_pass http://127.0.0.1:%%SERVER_PORT%%;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static website
    location = / {
        proxy_pass http://127.0.0.1:%%SERVER_PORT%%/api/config/v1/seo/files/index.html;

        proxy_set_header Host $host;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-User-Type $user_type;
        proxy_set_header X-Device-Type $device_type;

        proxy_cache WEBSITE;
        proxy_cache_valid 200 30d;
        proxy_cache_bypass $skip_cache $cache_bypass;
        proxy_no_cache $skip_cache $cache_bypass;

        expires 30d;
	    allow all;
	    access_log off;

        add_header Cache-Control "public, max-age=2592000, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        add_header Content-Type "text/html";
    }

    location ~* \.(?:jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot|otf|zip|pdf|docx|html?)$ {
        set $s3_content_type "application/octet-stream";

        if ($request_uri ~* \.(jpg|jpeg)$) {
            set $s3_content_type "text/html";
        }
        if ($request_uri ~* \.(jpg|jpeg)$) {
            set $s3_content_type "image/jpeg";
        }
        if ($request_uri ~* \.png$) {
            set $s3_content_type "image/png";
        }
        if ($request_uri ~* \.gif$) {
            set $s3_content_type "image/gif";
        }
        if ($request_uri ~* \.ico$) {
            set $s3_content_type "image/x-icon";
        }
        if ($request_uri ~* \.css$) {
            set $s3_content_type "text/css";
        }
        if ($request_uri ~* \.js$) {
            set $s3_content_type "application/javascript";
        }
        if ($request_uri ~* \.(woff|woff2)$) {
            set $s3_content_type "font/woff2";
        }
        if ($request_uri ~* \.ttf$) {
            set $s3_content_type "font/ttf";
        }
        if ($request_uri ~* \.svg$) {
            set $_content_type "image/svg+xml";
        }
        if ($request_uri ~* \.eot$) {
            set $s3_content_type "application/vnd.ms-fontobject";
        }
        if ($request_uri ~* \.otf$) {
            set $s3_content_type "font/otf";
        }
        if ($request_uri ~* \.zip$) {
            set $s3_content_type "application/zip";
        }
        if ($request_uri ~* \.pdf$) {
            set $s3_content_type "application/pdf";
        }
        if ($request_uri ~* \.docx?$) {
            set $s3_content_type "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
        }

        proxy_pass http://127.0.0.1:%%SERVER_PORT%%/api/config/v1/seo/files$request_uri;

        proxy_set_header Host $host;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-User-Type $user_type;
        proxy_set_header X-Device-Type $device_type;

        proxy_cache WEBSITE;
        proxy_cache_valid 200 30d;
        proxy_cache_bypass $skip_cache $cache_bypass;
        proxy_no_cache $skip_cache $cache_bypass;

        expires 30d;
	    allow all;
	    access_log off;

        add_header Cache-Control "public, max-age=2592000, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        add_header Content-Type $s3_content_type;
    }

    # Misc
    location = /favicon.ico {
	    access_log off;
	    log_not_found off;
    }
    location = /robots.txt  {
	    proxy_pass http://127.0.0.1:%%SERVER_PORT%%/api/config/v1/seo/robots;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    allow all;
	    access_log off;
	    log_not_found off;
    }
    location = /sitemap.xml {
        proxy_pass http://127.0.0.1:%%SERVER_PORT%%/api/config/v1/seo/sitemap;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    allow all;
        access_log off;
        log_not_found off;
    }
    location ~ /\.ht        { deny all; }
}
